From 7550b253b3ea9cfc3449ad5f030822e0e8f6c2a0 Mon Sep 17 00:00:00 2001
From: Chienyuan <chienyuanhuang@google.com>
Date: Thu, 28 Jan 2021 14:08:17 +0800
Subject: [PATCH] DO NOT MERGE Add mutex for std::map in btif_av.cc

TAG: #security
Bug: 169252501
Test: compilation
Ignore-AOSP-First: security fix
Change-Id: I592c0a9c0e77869999357611aa99f3d9bc53b8b6
(cherry picked from commit 1be5b0d94068e47ecaa0a00b2f40ef520850f6ff)
---
 btif/src/btif_av.cc | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/btif/src/btif_av.cc b/btif/src/btif_av.cc
index 1003b0f82..679ec5ef5 100644
--- a/btif/src/btif_av.cc
+++ b/btif/src/btif_av.cc
@@ -25,6 +25,7 @@
 #include <base/strings/stringprintf.h>
 #include <string.h>
 #include <map>
+#include <mutex>

 #include <hardware/bluetooth.h>
 #include <hardware/bt_av.h>
@@ -532,6 +533,7 @@ class BtifAvSource {
   std::set<RawAddress> silenced_peers_;
   RawAddress active_peer_;
   std::map<uint8_t, tBTA_AV_HNDL> peer_id2bta_handle_;
+  std::mutex mutex_;
 };

 class BtifAvSink {
@@ -649,6 +651,7 @@ class BtifAvSink {
   std::map<RawAddress, BtifAvPeer*> peers_;
   RawAddress active_peer_;
   std::map<uint8_t, tBTA_AV_HNDL> peer_id2bta_handle_;
+  std::mutex mutex_;
 };

 /*****************************************************************************
@@ -1036,6 +1039,7 @@ BtifAvPeer* BtifAvSource::FindPeerByPeerId(uint8_t peer_id) {

 BtifAvPeer* BtifAvSource::FindOrCreatePeer(const RawAddress& peer_address,
                                            tBTA_AV_HNDL bta_handle) {
+  std::unique_lock<std::mutex> lock(mutex_);
   BTIF_TRACE_DEBUG("%s: peer_address=%s bta_handle=0x%x", __PRETTY_FUNCTION__,
                    peer_address.ToString().c_str(), bta_handle);

@@ -1141,6 +1145,7 @@ void BtifAvSource::RegisterAllBtaHandles() {
 }

 void BtifAvSource::DeregisterAllBtaHandles() {
+  std::unique_lock<std::mutex> lock(mutex_);
   for (auto it : peer_id2bta_handle_) {
     tBTA_AV_HNDL bta_handle = it.second;
     BTA_AvDeregister(bta_handle);
@@ -1150,6 +1155,7 @@ void BtifAvSource::DeregisterAllBtaHandles() {

 void BtifAvSource::BtaHandleRegistered(uint8_t peer_id,
                                        tBTA_AV_HNDL bta_handle) {
+  std::unique_lock<std::mutex> lock(mutex_);
   peer_id2bta_handle_.insert(std::make_pair(peer_id, bta_handle));

   // Set the BTA Handle for the Peer (if exists)
@@ -1240,6 +1246,7 @@ BtifAvPeer* BtifAvSink::FindPeerByPeerId(uint8_t peer_id) {

 BtifAvPeer* BtifAvSink::FindOrCreatePeer(const RawAddress& peer_address,
                                          tBTA_AV_HNDL bta_handle) {
+  std::unique_lock<std::mutex> lock(mutex_);
   BTIF_TRACE_DEBUG("%s: peer_address=%s bta_handle=0x%x", __PRETTY_FUNCTION__,
                    peer_address.ToString().c_str(), bta_handle);

@@ -1348,6 +1355,7 @@ void BtifAvSink::RegisterAllBtaHandles() {
 }

 void BtifAvSink::DeregisterAllBtaHandles() {
+  std::unique_lock<std::mutex> lock(mutex_);
   for (auto it : peer_id2bta_handle_) {
     tBTA_AV_HNDL bta_handle = it.second;
     BTA_AvDeregister(bta_handle);
@@ -1356,6 +1364,7 @@ void BtifAvSink::DeregisterAllBtaHandles() {
 }

 void BtifAvSink::BtaHandleRegistered(uint8_t peer_id, tBTA_AV_HNDL bta_handle) {
+  std::unique_lock<std::mutex> lock(mutex_);
   peer_id2bta_handle_.insert(std::make_pair(peer_id, bta_handle));

   // Set the BTA Handle for the Peer (if exists)
--
2.29.0
